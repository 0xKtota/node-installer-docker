version: '3'
services:

  bee:
    image: iotaledger/bee:${BEE_VERSION:?BEE_VERSION is missing}
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    stop_grace_period: 5m
    tty: true
    working_dir: /app
    ports:
      - "${BEE_GOSSIP_PORT:-15601}:${BEE_GOSSIP_PORT:-15601}/tcp"
      - "${BEE_AUTOPEERING_PORT:-14636}:${BEE_AUTOPEERING_PORT:-14636}/udp"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bee.service=bee"
      - "traefik.http.routers.bee.rule=Host(`${BEE_HOST:?BEE_HOST is missing}`)"
      - "traefik.http.routers.bee.entrypoints=websecure"
      - "traefik.http.routers.bee.tls=true"
      - "traefik.http.routers.bee.tls.certresolver=myresolver"
      - "traefik.http.services.bee.loadbalancer.server.port=8081"
      - "traefik.http.routers.bee.middlewares=redirect-dashboard"
      - "traefik.http.middlewares.redirect-dashboard.redirectregex.regex=^https:\\/\\/([^\\/]+)\\/?$$"
      - "traefik.http.middlewares.redirect-dashboard.redirectregex.replacement=https://$$1/dashboard/"
      - "traefik.http.middlewares.redirect-dashboard.redirectregex.permanent=true"
    cap_drop:
      - ALL
    command: [ "--config", "/app/config.json" ]
    volumes:
      - "${BEE_DATA_DIR:-./data}/storage:/app/storage"
      - "${BEE_DATA_DIR:-./data}/snapshots:/app/snapshots"
      - "${BEE_DATA_DIR:-./data}/config/config.chrysalis-${BEE_NETWORK:-mainnet}.json:/app/config.json:ro"

  ##################################################################
  #  Reverse Proxy and SSL                                         #
  ##################################################################

  traefik:
    image: traefik:v2.6
    restart: unless-stopped
    command:
      # - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL:-}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "${BEE_HTTP_PORT:-80}:80/tcp"
      - "${BEE_HTTPS_PORT:-443}:443/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${BEE_DATA_DIR:-./data}/letsencrypt:/letsencrypt"
      - "./assets/traefik/${SSL_CONFIG:-letsencrypt}.yml:/etc/traefik/dynamic/config.yml:ro"
      - "${BEE_SSL_CERT:-./assets/traefik/certs/fake.cert}:/certs/domain.cert:ro"
      - "${BEE_SSL_KEY:-./assets/traefik/certs/fake.key}:/certs/domain.key:ro"

  traefik-certs-dumper:
    image: ldez/traefik-certs-dumper:v2.8.1
    restart: unless-stopped
    entrypoint: |
      sh -c '
        apk add jq
        while [ ! -e /data/acme.json ] || [ `jq ".[] | .Certificates | length" /data/acme.json` == 0 ]; do
          sleep 1;
        done
        traefik-certs-dumper file --version v2 --watch --source /data/acme.json --dest /data/certs
      '
    volumes:
      - ${BEE_DATA_DIR:-./data}/letsencrypt:/data
